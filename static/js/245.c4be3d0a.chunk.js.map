{"version":3,"file":"static/js/245.c4be3d0a.chunk.js","mappings":"gKAGA,MAAMA,EAAgBC,EAAAA,MAAW,IAAM,6BACjCC,EAAWD,EAAAA,MAAW,IAAM,+BAC5BE,EAAmBF,EAAAA,MACvB,IAAM,+BAEFG,EAA2BH,EAAAA,MAC/B,IAAM,+BAyBR,EAtB0BI,KACxB,MAAOC,EAAYC,IAAiBC,EAAAA,EAAAA,WAAS,GAK7C,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeF,SAAA,CAC3BL,IAAcG,EAAAA,EAAAA,KAACN,EAAgB,KAChCS,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBF,SAAA,EACrCF,EAAAA,EAAAA,KAACL,EAAwB,CAACU,iBATJC,IAC5BR,EAAcQ,EAAO,KASfH,EAAAA,EAAAA,MAACI,EAAAA,GAAM,CAAAL,SAAA,EACLF,EAAAA,EAAAA,KAACQ,EAAAA,GAAK,CAACC,KAAK,IAAIC,SAASV,EAAAA,EAAAA,KAACT,EAAa,OACvCS,EAAAA,EAAAA,KAACQ,EAAAA,GAAK,CAACC,KAAK,eAAeC,SAASV,EAAAA,EAAAA,KAACP,EAAQ,gBAIlD,C","sources":["routers/dashboard.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\n\r\nconst DashboardPage = React.lazy(() => import(\"pages/DashboardPage\"));\r\nconst UserPage = React.lazy(() => import(\"pages/UserPages\"));\r\nconst SidebarComponent = React.lazy(\r\n  () => import(\"components/SidebarComponent\")\r\n);\r\nconst DashboardNavbarComponent = React.lazy(\r\n  () => import(\"components/DashboardNavbarComponent\")\r\n);\r\n\r\nconst Routers: React.FC = () => {\r\n  const [isSideOpen, setIsSideOpen] = useState(true);\r\n  const handleSideOpenChange = (isOpen: boolean) => {\r\n    setIsSideOpen(isOpen);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex w-screen\">\r\n        {isSideOpen && <SidebarComponent />}\r\n        <div className=\"w-[calc(screen-16rem)]\">\r\n          <DashboardNavbarComponent onSideOpenChange={handleSideOpenChange} />\r\n          <Routes>\r\n            <Route path=\"/\" element={<DashboardPage />} />\r\n            <Route path=\"/pokemon/:id\" element={<UserPage />} />\r\n          </Routes>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Routers;\r\n"],"names":["DashboardPage","React","UserPage","SidebarComponent","DashboardNavbarComponent","Routers","isSideOpen","setIsSideOpen","useState","_jsx","_Fragment","children","_jsxs","className","onSideOpenChange","isOpen","Routes","Route","path","element"],"sourceRoot":""}