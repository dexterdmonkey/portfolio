{"version":3,"file":"static/js/558.69218560.chunk.js","mappings":"gKAOA,MA0EA,EA1EiEA,IAE1D,IAF2D,iBAChEC,GACDD,EACC,MAAOE,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,IAKpCC,EAAYC,IAAiBF,EAAAA,EAAAA,WAAS,GAOvCG,GACJC,EAAAA,EAAAA,KAAA,MACEC,QAASA,IAAMN,GAAa,GAC5BO,UAAU,qFAAoFC,UAE9FH,EAAAA,EAAAA,KAAA,MAAAG,UACEH,EAAAA,EAAAA,KAACI,EAAAA,GAAO,CAACC,GAAG,qBAAqBH,UAAU,mBAAkBC,SAAC,gBAOpE,OACEG,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,gGAA+FC,SAAA,EAC5GG,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,6DAA4DC,SAAA,EACzEH,EAAAA,EAAAA,KAAA,UAAQC,QAtBWM,KACvB,MAAMC,GAAoBX,EAC1BC,EAAcU,GACdf,EAAiBe,EAAiB,EAmBIL,UAChCH,EAAAA,EAAAA,KAAA,KAAGE,UAAU,yBAEfF,EAAAA,EAAAA,KAACI,EAAAA,GAAO,CAACC,GAAG,aAAaH,UAAU,oCAAmCC,SAAC,mBAGvEG,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,0BAAyBC,SAAA,EACtCH,EAAAA,EAAAA,KAAA,OAAKE,UAAU,kBAAiBC,SAAEJ,KAClCC,EAAAA,EAAAA,KAAA,OAAAG,UACEH,EAAAA,EAAAA,KAACI,EAAAA,GAAO,CAACC,GAAG,SAASH,UAAU,kCAAiCC,UAC9DH,EAAAA,EAAAA,KAAA,UAAQE,UAAU,6CAA4CC,SAAC,gBAKnEH,EAAAA,EAAAA,KAAA,UAAQE,UAAU,oBAAoBD,QA1CtBQ,KACtBd,GAAcD,EAAU,EAyC6CS,SAC5DT,GACCM,EAAAA,EAAAA,KAAA,KAAGE,UAAU,gBAEbF,EAAAA,EAAAA,KAAA,KAAGE,UAAU,0BAKpBR,IACCY,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,YAAWC,SAAA,CACvBJ,GACDC,EAAAA,EAAAA,KAAA,OACEC,QAASA,IAAMN,GAAa,GAC5BO,UAAU,yCAAwCC,UAElDH,EAAAA,EAAAA,KAACI,EAAAA,GAAO,CAACF,UAAU,SAASG,GAAG,SAAQF,UACrCH,EAAAA,EAAAA,KAAA,UAAQE,UAAU,kDAAiDC,SAAC,oBAOxE,C","sources":["components/DashboardNavbarComponent.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\ninterface DashboardNavbarProps {\r\n  onSideOpenChange: (isOpen: boolean) => void;\r\n}\r\n\r\nconst DashboardNavbarComponent: React.FC<DashboardNavbarProps> = ({\r\n  onSideOpenChange,\r\n}) => {\r\n  const [isNavOpen, setIsNavOpen] = useState(false);\r\n  const handleToggleNav = () => {\r\n    setIsNavOpen(!isNavOpen);\r\n  };\r\n\r\n  const [isSideOpen, setIsSideOpen] = useState(true);\r\n  const handleToggleSide = () => {\r\n    const newSideOpenState = !isSideOpen;\r\n    setIsSideOpen(newSideOpenState);\r\n    onSideOpenChange(newSideOpenState);\r\n  };\r\n\r\n  const navList = (\r\n    <ul\r\n      onClick={() => setIsNavOpen(false)}\r\n      className=\"mt-2 mb-4 flex flex-col gap-2 lg:mb-0 lg:mt-0 lg:flex-row lg:items-center lg:gap-6\"\r\n    >\r\n      <li>\r\n        <NavLink to=\"/dashboard/profile\" className=\"p-1 font-normal \">\r\n          Profile\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n  return (\r\n    <nav className=\"fixed top-0 w-full z-10 bg-white shadow-md border-b border-gray-200 px-4 py-2 lg:px-8 lg:py-4\">\r\n      <div className=\"max-w-screen-xl mx-auto flex items-center justify-between \">\r\n        <button onClick={handleToggleSide}>\r\n          <i className=\"bi bi-menu-button\"></i>\r\n        </button>\r\n        <NavLink to=\"/dashboard\" className=\"cursor-pointer py-1.5 font-medium\">\r\n          Dexterdmonkey\r\n        </NavLink>\r\n        <div className=\"flex items-center gap-4\">\r\n          <div className=\"hidden lg:block\">{navList}</div>\r\n          <div>\r\n            <NavLink to=\"/login\" className=\"p-1 font-normal hidden lg:block\">\r\n              <button className=\"w-full text-sm py-2 px-4 border rounded-md\">\r\n                Logout\r\n              </button>\r\n            </NavLink>\r\n          </div>\r\n          <button className=\"ml-auto lg:hidden\" onClick={handleToggleNav}>\r\n            {isNavOpen ? (\r\n              <i className=\"bi bi-dash\"></i>\r\n            ) : (\r\n              <i className=\"bi bi-justify\"></i>\r\n            )}\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {isNavOpen && (\r\n        <div className=\"lg:hidden\">\r\n          {navList}\r\n          <div\r\n            onClick={() => setIsNavOpen(false)}\r\n            className=\"flex flex-col items-center gap-x-1 p-4\"\r\n          >\r\n            <NavLink className=\"w-full\" to=\"/login\">\r\n              <button className=\"w-full text-sm mb-2 py-2 px-4 border rounded-md\">\r\n                Logout\r\n              </button>\r\n            </NavLink>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default DashboardNavbarComponent;\r\n"],"names":["_ref","onSideOpenChange","isNavOpen","setIsNavOpen","useState","isSideOpen","setIsSideOpen","navList","_jsx","onClick","className","children","NavLink","to","_jsxs","handleToggleSide","newSideOpenState","handleToggleNav"],"sourceRoot":""}