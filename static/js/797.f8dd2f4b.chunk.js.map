{"version":3,"file":"static/js/797.f8dd2f4b.chunk.js","mappings":"yKAgBA,MA+EA,EA/EkCA,KAChC,MAAOC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAoB,KACnDC,EAASC,IAAcF,EAAAA,EAAAA,UAAwB,OAC/CG,EAASC,IAAcJ,EAAAA,EAAAA,UAAwB,OAC/CK,EAASC,IAAcN,EAAAA,EAAAA,WAAkB,IACzCO,EAAOC,IAAYR,EAAAA,EAAAA,UAAwB,MAE5CS,EAAgBC,UACpBJ,GAAW,GACXE,EAAS,MACT,IACE,MAAMG,QAAiBC,EAAAA,EAAMC,IAAiBC,GAC9Cf,EAAeY,EAASI,KAAKC,SAC7Bd,EAAWS,EAASI,KAAKE,MACzBb,EAAWO,EAASI,KAAKG,SAC3B,CAAE,MAAOC,GACPX,EAAS,+BACX,CAAC,QACCF,GAAW,EACb,GAOF,OAJAc,EAAAA,EAAAA,YAAU,KACRX,EAAc,qCAAqC,GAClD,KAGDY,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wBAAuBC,SAAA,EACpCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,0BAAyBC,SAAC,iBACvClB,IAAWmB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,4BAA2BC,SAAC,eACtDhB,IAASiB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,2BAA0BC,SAAEhB,KACrDc,EAAAA,EAAAA,MAAA,SAAOC,UAAU,6CAA4CC,SAAA,EAC3DC,EAAAA,EAAAA,KAAA,SAAAD,UACEF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,qBAAoBC,SAAC,QACnCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,qBAAoBC,SAAC,eAGvCC,EAAAA,EAAAA,KAAA,SAAAD,SACGzB,EAAY2B,KAAI,CAACC,EAASC,KACzBN,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,iCAAgCC,UAC5CC,EAAAA,EAAAA,KAACI,EAAAA,GAAO,CAACC,GAAE,sBAAAC,OAAwBJ,EAAQK,MAAOR,SAC/CI,EAAQ,OAGbH,EAAAA,EAAAA,KAAA,MAAIF,UAAU,iCAAgCC,UAC5CC,EAAAA,EAAAA,KAACI,EAAAA,GAAO,CAACC,GAAE,sBAAAC,OAAwBJ,EAAQK,MAAOR,SAC/CG,EAAQK,WARNL,EAAQK,cAevBV,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qCAAoCC,SAAA,CAChDpB,IACCqB,EAAAA,EAAAA,KAAA,UACEF,UAAU,2CACVU,QAASA,IAAMvB,EAAcN,GAC7B8B,SAAU5B,EAAQkB,SAEjBlB,EAAU,aAAe,aAG7BJ,IACCuB,EAAAA,EAAAA,KAAA,UACEF,UAAU,2CACVU,QAASA,IAAMvB,EAAcR,GAC7BgC,SAAU5B,EAAQkB,SAEjBlB,EAAU,aAAe,cAI5B,C","sources":["pages/PokemonListPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\ninterface Pokemon {\r\n  name: string;\r\n  url: string;\r\n}\r\n\r\ninterface ApiResponse {\r\n  count: number;\r\n  next: string | null;\r\n  previous: string | null;\r\n  results: Pokemon[];\r\n}\r\n\r\nconst PokemonListPage: React.FC = () => {\r\n  const [pokemonList, setPokemonList] = useState<Pokemon[]>([]);\r\n  const [nextUrl, setNextUrl] = useState<string | null>(null);\r\n  const [prevUrl, setPrevUrl] = useState<string | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const fetchPokemons = async (url: string) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await axios.get<ApiResponse>(url);\r\n      setPokemonList(response.data.results);\r\n      setNextUrl(response.data.next);\r\n      setPrevUrl(response.data.previous);\r\n    } catch (err) {\r\n      setError(\"Failed to fetch Pokemon list\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPokemons(\"https://pokeapi.co/api/v2/pokemon/\");\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-4\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">Pokemon List</h1>\r\n      {loading && <div className=\"text-center text-blue-500\">Loading...</div>}\r\n      {error && <div className=\"text-center text-red-500\">{error}</div>}\r\n      <table className=\"min-w-full bg-white border border-gray-200\">\r\n        <thead>\r\n          <tr>\r\n            <th className=\"py-2 px-4 border-b\">No</th>\r\n            <th className=\"py-2 px-4 border-b\">Name</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {pokemonList.map((pokemon, index) => (\r\n            <tr key={pokemon.name}>\r\n              <td className=\"py-2 px-4 border-b text-center\">\r\n                <NavLink to={`/dashboard/pokemon/${pokemon.name}`}>\r\n                  {index + 1}\r\n                </NavLink>\r\n              </td>\r\n              <td className=\"py-2 px-4 border-b text-center\">\r\n                <NavLink to={`/dashboard/pokemon/${pokemon.name}`}>\r\n                  {pokemon.name}\r\n                </NavLink>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"flex content-end mt-4 gap-4 w-full\">\r\n        {prevUrl && (\r\n          <button\r\n            className=\"bg-blue-500 text-white py-2 px-4 rounded\"\r\n            onClick={() => fetchPokemons(prevUrl)}\r\n            disabled={loading}\r\n          >\r\n            {loading ? \"Loading...\" : \"Previous\"}\r\n          </button>\r\n        )}\r\n        {nextUrl && (\r\n          <button\r\n            className=\"bg-blue-500 text-white py-2 px-4 rounded\"\r\n            onClick={() => fetchPokemons(nextUrl)}\r\n            disabled={loading}\r\n          >\r\n            {loading ? \"Loading...\" : \"Next\"}\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonListPage;\r\n"],"names":["PokemonListPage","pokemonList","setPokemonList","useState","nextUrl","setNextUrl","prevUrl","setPrevUrl","loading","setLoading","error","setError","fetchPokemons","async","response","axios","get","url","data","results","next","previous","err","useEffect","_jsxs","className","children","_jsx","map","pokemon","index","NavLink","to","concat","name","onClick","disabled"],"sourceRoot":""}